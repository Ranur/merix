/**
   USE OF THIS SOFTWARE IS GOVERNED BY THE TERMS AND CONDITIONS
   OF THE LICENSE STATEMENT AND LIMITED WARRANTY FURNISHED WITH
   THE PRODUCT.
   <p/>
   IN PARTICULAR, YOU WILL INDEMNIFY AND HOLD B2N LTD., ITS
   RELATED COMPANIES AND ITS SUPPLIERS, HARMLESS FROM AND AGAINST ANY
   CLAIMS OR LIABILITIES ARISING OUT OF THE USE, REPRODUCTION, OR
   DISTRIBUTION OF YOUR PROGRAMS, INCLUDING ANY CLAIMS OR LIABILITIES
   ARISING OUT OF OR RESULTING FROM THE USE, MODIFICATION, OR
   DISTRIBUTION OF PROGRAMS OR FILES CREATED FROM, BASED ON, AND/OR
   DERIVED FROM THIS SOURCE CODE FILE.
*/

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Server states

#if defined(MODULE_IS_SERVER)

#define SERVER_STATE_DATA_REQUEST_DELAY 1000

#define SERVER_STATE_HANDSHAKE_TIMEOUT 20000
#define SERVER_STATE_RESET_TIMEOUT 5000

#define SERVER_STATE_RESET 0
#define SERVER_STATE_HANDSHAKE 1
#define SERVER_STATE_WORK 2


uint32_t SERVER_STATE_REST_LAST_EXECUTE;
uint32_t SERVER_STATE_HANDSHAKE_LAST_EXECUTE;
uint32_t SERVER_STATE_WORK_LAST_EXECUTE;
uint8_t SERVER_STATE;

inline void SERVER_STATE_INIT()
{
  SERVER_STATE = SERVER_STATE_RESET;
  SERVER_STATE_REST_LAST_EXECUTE = millis();
  LOG64_SET(F("SERVER_STATE: INIT"));
  LOG64_NEW_LINE;
}

#endif

